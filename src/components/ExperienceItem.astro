---
interface Props {
    exp: string;
    corp: string;
    title: string;
    current: boolean;
    details: Array<String>;
}

const { exp, corp, title, current, details } = Astro.props;
---

<div class="experience_item">
    <div class="experience_title">
        {current && <div class="blob" />}
        <div class="experience_title_detail">
            <p>{exp} <span class="corp">{corp}</span></p>
            <p class="experience_title_occupation">{title}</p>
        </div>
    </div>
    <ul>
        {details.map((item) => <li>{item}.</li>)}
    </ul>
</div>

<style is:inline>
    @keyframes hero-gradient-animation {
        0% {
            --c-0: hsla(336.00000000000006, 100%, 61%, 0.19);
            --y-0: 93%;
            --s-start-0: 3%;
            --s-end-0: 63%;
            --x-0: 93%;
            --y-1: 6%;
            --x-1: 4%;
            --s-start-1: 3%;
            --s-end-1: 63%;
            --c-1: hsla(189.26470588235296, 100%, 61%, 0.19);
        }

        100% {
            --c-0: hsla(266, 93%, 82%, 0.39);
            --y-0: 80%;
            --s-start-0: 8.599031645676185%;
            --s-end-0: 74.81436157226562%;
            --x-0: 10%;
            --y-1: 45%;
            --x-1: 108%;
            --s-start-1: 11.010535930765085%;
            --s-end-1: 74.81436157226562%;
            --c-1: hsla(266, 93%, 82%, 0.39);
        }
    }

    @property --c-0 {
        syntax: "<color>";
        inherits: false;
        initial-value: hsla(336.00000000000006, 100%, 61%, 0.19);
    }

    @property --y-0 {
        syntax: "<percentage>";
        inherits: false;
        initial-value: 93%;
    }

    @property --s-start-0 {
        syntax: "<percentage>";
        inherits: false;
        initial-value: 3%;
    }

    @property --s-end-0 {
        syntax: "<percentage>";
        inherits: false;
        initial-value: 63%;
    }

    @property --x-0 {
        syntax: "<percentage>";
        inherits: false;
        initial-value: 93%;
    }

    @property --y-1 {
        syntax: "<percentage>";
        inherits: false;
        initial-value: 6%;
    }

    @property --x-1 {
        syntax: "<percentage>";
        inherits: false;
        initial-value: 4%;
    }

    @property --s-start-1 {
        syntax: "<percentage>";
        inherits: false;
        initial-value: 3%;
    }

    @property --s-end-1 {
        syntax: "<percentage>";
        inherits: false;
        initial-value: 63%;
    }

    @property --c-1 {
        syntax: "<color>";
        inherits: false;
        initial-value: hsla(189.26470588235296, 100%, 61%, 0.19);
    }

    .experience_item {
        --c-0: hsla(336.00000000000006, 100%, 61%, 0.19);
        --y-0: 93%;
        --x-0: 93%;
        --y-1: 6%;
        --x-1: 4%;
        --c-1: hsla(189.26470588235296, 100%, 61%, 0.19);
        background-color: hsla(286, 60%, 56%, 0);
        background-image: radial-gradient(
                circle at var(--x-0) var(--y-0),
                var(--c-0) var(--s-start-0),
                transparent var(--s-end-0)
            ),
            radial-gradient(
                circle at var(--x-1) var(--y-1),
                var(--c-1) var(--s-start-1),
                transparent var(--s-end-1)
            );
        animation: hero-gradient-animation 10s linear infinite alternate;
        background-blend-mode: normal, normal;

        padding: 10px;
        margin-bottom: 1.5rem;
        border-radius: 20px;
        -webkit-backdrop-filter: blur(55px);
        backdrop-filter: blur(55px);
        width: min(100% - 2rem, 30rem);
    }

    .experience_title {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .experience_title_occupation {
        color: #707070;
    }

    .experience_title_detail {
        width: 100%;
        display: flex;
        justify-content: space-between;
    }

    .experience_title_detail p {
        font-size: 0.935em;
    }

    .experience_item ul {
        margin-left: 25px;
        margin-bottom: 1rem;
    }

    .experience_item ul li {
        font-size: 0.925em;
        margin-bottom: 5px;
    }

    .corp {
        font-weight: 600;
    }

    .blob {
        background: rgb(39, 161, 23);
        border-radius: 50%;
        margin: 10px;
        height: 20px;
        width: 20px;

        box-shadow: 0 0 0 0 rgba(0, 0, 0, 1);
        transform: scale(1);
        animation: pulse 2s infinite;
    }

    @keyframes pulse {
        0% {
            transform: scale(0.95);
            box-shadow: 0 0 0 0 rgba(42, 182, 37, 0.7);
        }

        70% {
            transform: scale(1);
            box-shadow: 0 0 0 10px rgba(82, 199, 67, 0);
        }

        100% {
            transform: scale(0.95);
            box-shadow: 0 0 0 0 rgba(119, 185, 57, 0);
        }
    }
</style>
